name: Execute Tests And Check Coverage

# run workflow on...
on:
  # ...push directly to main
  push:
    branches:
      - 'main'
  # ...when there is pull request activity
  pull_request:
  # ...manually
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '7.0.101' ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install Required Tools
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-reportgenerator-globaltool
      - name: Install dependencies
        run: dotnet restore Source/FileWatcherExTests
      - name: Build
        run: dotnet build --configuration Release --no-restore Source/FileWatcherExTests
      - name: Run Tests
        run: dotnet test --no-restore Source/FileWatcherExTests
      # check if minimum coverage is 75 % 
      - name: Check Coverage
        run: > 
          dotnet test --no-restore --no-build Source/FileWatcherExTests 
          /p:Threshold=75
          /p:ThresholdType=branch 
          /p:CollectCoverage=true 
          /p:CoverletOutputFormat=opencover 
      - name: Create Coverage Report
        run: >
          dotnet reportgenerator 
          -reports:Source/FileWatcherExTests/coverage.opencover.xml 
          -targetdir:Source/FileWatcherExTests/coveragereport 
          -reporttypes:HtmlInline
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: Source/FileWatcherExTests/coveragereport
          